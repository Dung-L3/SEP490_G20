// üåê NETWORK CONFIGURATION
// Ch·ªâ c·∫ßn thay ƒë·ªïi LOCAL_IP khi chuy·ªÉn m√°y kh√°c
export const NETWORK_CONFIG = {
  // IP c·ªßa m√°y t√≠nh (ch·ªâ c·∫ßn thay ƒë·ªïi duy nh·∫•t gi√° tr·ªã n√†y)
  LOCAL_IP: '192.168.24.103',
  
  // C√°c c·∫•u h√¨nh c·ªë ƒë·ªãnh
  FRONTEND_PORT: 5173,
  BACKEND_PORT: 8080,
  
  // T·ª± ƒë·ªông t·∫°o URLs
  get FRONTEND_URL() {
    // ∆Øu ti√™n s·ª≠ d·ª•ng IP c·ª•c b·ªô
    return `http://${this.LOCAL_IP}:${this.FRONTEND_PORT}`;
  },
  
  get BACKEND_URL() {
    // T·ª± ƒë·ªông s·ª≠ d·ª•ng c√πng IP v·ªõi frontend
    return `http://${this.LOCAL_IP}:${this.BACKEND_PORT}`;
  },

  get LOCALHOST_URL() {
    // H·ªó tr·ª£ localhost cho development
    return `http://localhost:${this.FRONTEND_PORT}`;
  },

  // T·∫°o danh s√°ch c√°c origin ƒë∆∞·ª£c ph√©p
  get ALLOWED_ORIGINS() {
    return [
      `http://${this.LOCAL_IP}:${this.FRONTEND_PORT}`,
      `http://localhost:${this.FRONTEND_PORT}`,
      `http://127.0.0.1:${this.FRONTEND_PORT}`
    ];
  }
};

// Export c√°c gi√° tr·ªã c·∫ßn thi·∫øt
export const {
  LOCAL_IP,
  FRONTEND_PORT,
  BACKEND_PORT,
  FRONTEND_URL,
  BACKEND_URL,
  LOCALHOST_URL
} = NETWORK_CONFIG;